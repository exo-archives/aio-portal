package org.exoplatform.portal.webui.application;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import org.apache.commons.logging.Log;
import org.exoplatform.services.log.ExoLogger;

/**
 * This class is a wrapper on the events generated by the portlet container and
 * to be propagated to other portlet instances deployed in the same portal page.
 * 
 * It also wraps a counter list that tells for each portlet windowId, how many
 * times the processEvent() method has been called. This is to avoid infinite
 * cycles where a processEvent() method will generate a new event which will
 * target the same portlet
 */
public class EventsWrapper {

  protected static Log log = ExoLogger
	  .getLogger("portal:EventsWrapper");

  private List<javax.portlet.Event> events;
  private List<CounterWrapper> counters = new ArrayList<CounterWrapper>();
  public static final int THRESHOLD = 4;

  public EventsWrapper(List<javax.portlet.Event> events) {
	this.events = events;
  }

  public List<javax.portlet.Event> getEvents() {
	return this.events;
  }

  public List<CounterWrapper> getCounters() {
	return counters;
  }

  public void increaseCounter(String portletId) {
	for (Iterator iter = counters.iterator(); iter.hasNext();) {
	  CounterWrapper counter = (CounterWrapper) iter.next();
	  if (portletId.equals(counter.portletId)) {
		counter.counter++;
		return;
	  }
	}
	counters.add(new CounterWrapper(portletId));
  }

  public boolean isInvokedTooManyTimes(String windowId) {
	for (Iterator iter = counters.iterator(); iter.hasNext();) {
	  CounterWrapper counter = (CounterWrapper) iter.next();
	  if (windowId.equals(counter.portletId)) {
		if (counter.counter + 1 > THRESHOLD) {
		  log.info("Portlet " + windowId + " has already been invokated "
			  + THRESHOLD
			  + " times and will not be more to avoid infinite cycles");
		  return true;
		}
		return false;
	  }
	}
	return false;
  }

  public class CounterWrapper {
  	public String portletId;
  
  	public int counter = 0;
  
  	public CounterWrapper(String portletId) {
  	  this.portletId = portletId;
  	}
  }

}
