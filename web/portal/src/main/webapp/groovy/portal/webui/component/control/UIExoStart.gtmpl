<%
  import org.exoplatform.portal.component.control.UIExoStart ;
  import org.exoplatform.portal.config.model.PageNode ;
  import org.exoplatform.web.application.JavascriptManager;
  import org.exoplatform.portal.config.model.PageNavigation ;

  def rcontext = _ctx.getRequestContext() ;
  JavascriptManager jsmanager = rcontext.getJavascriptManager();
  
  jsmanager.importJavascript('eXo.portal.UIExoStartMenu') ;
  jsmanager.addOnLoadJavascript('eXo.portal.UIExoStartMenu.onLoad');
  jsmanager.addOnResizeJavascript('eXo.portal.UIExoStartMenu.hideUIStartMenu');
  jsmanager.addOnScrollJavascript('eXo.portal.UIExoStartMenu.hideUIStartMenu');
  String docBase =  rcontext.getRequestContextPath() ;
  String onclick = "eXo.portal.UIExoStartMenu.showStartMenu(event)" ;
  
  void renderSinglePageNode(PageNode node) {
    String  href = uicomponent.event("ChangePage",  node.getUri()) ;
    String icon = node.getIcon();
    if(icon == null) icon = "PageIcon";
    print """
      <div class="MenuItem">
        <div class="LabelItem">
          <div class="$icon">
            <div class="LabelText"><a href="$href">$node.label</a></div>
          </div>
        </div>
      </div>
    """ ;
  }
  
  void renderPageNode(PageNode node) {
     String  href = uicomponent.event("ChangePage",  node.getUri()) ;
     String icon = node.getIcon();
     if(icon == null) icon = "PageIcon";
     print """
      <div class="MenuItem">
        <div class="LabelItem">
          <div class="$icon"> 
            <div class="BlackArrowIcon">
              <div class="LabelText"><a href="$href">$node.label</a></div>
            </div>
          </div>
        </div>
        <div class="MenuItemContainer">
          <div class="StartMenuDecorator">
            <div class="StartMenuTL">
              <div class="StartMenuTR">
                <div class="StartMenuTC"><span></span></div>
              </div>
            </div>
            <div class="StartMenuML">
              <div class="StartMenuMR">
                <div class="StartMenuBG" style="padding-bottom: 6px">
      """ ;
      for(child in node.getChildren()) {
        if(child.getChildren() != null && child.getChildren().size() > 0) renderPageNode(child) ;
        else renderSinglePageNode(child) ;
      }
      print """
                </div>
              </div>
            </div>
            <div class="StartMenuBL">
              <div class="StartMenuBR">
              <div class="StartMenuBC"><span></span></div>
              </div>
            </div>             
          </div>  
        </div>
      </div>
    """ ;
  }
  
  void renderPageNavigation(PageNavigation navigation) {
    print """
      <div class="DecoratorBlock">
        <div class="TitleBar">${navigation.owner}'s pages </div>
    """ ;
    nodes = navigation.getNodes() ;
    for(node in nodes) {
      if(node.getChildren() != null && node.getChildren().size() > 0) renderPageNode(node) ;
      else renderSinglePageNode(node) ;
    }
    print """
      </div>
    """ ;    
  }
  
  void renderNavigations() {
    print """
      <div class="MenuItem">
        <div class="LabelItem">
          <div class="NavigationBackground">
            <div class="NavigationArrowIcon">
              <div class="LabelText">Page Navigations</div>
            </div>
          </div>
        </div>
        <div class="MenuItemContainer NavigationContainer">
          <div class="StartMenuDecorator">
            <div class="StartMenuTL">
              <div class="StartMenuTR">
                <div class="StartMenuTC"><span></span></div>
              </div>
            </div>
            <div class="StartMenuML">
              <div class="StartMenuMR">
                <div class="StartMenuBG" style="padding: 0px 5px 5px 5px">
      """ ;
      naviagtions = uicomponent.getNavigations() ;
      for(navigation in naviagtions) {
        renderPageNavigation(navigation) ;
      }
      print """
                </div>
              </div>
            </div>
            <div class="StartMenuBL">
              <div class="StartMenuBR">
              <div class="StartMenuBC" ><span></span></div>
              </div>
            </div>
             
          </div>  
        </div>
      </div>
    """ ;
  }
  
  void renderMenuItemContainer(UIExoStart.MenuItemContainer item) {
    String label = _ctx.appRes(uicomponent.getId() + ".item."+item.name) ;
    print """
      <div class="MenuItem">
        <div class="LabelItem">
          <div class="$item.icon">
            <div class="BlackArrowIcon">
              <div class="LabelText">$label</div>
            </div>
          </div>
        </div>
        <div class="MenuItemContainer">
          <div class="StartMenuDecorator">
            <div class="StartMenuTL">
              <div class="StartMenuTR">
                <div class="StartMenuTC"><span></span></div>
              </div>
            </div>
            <div class="StartMenuML">
              <div class="StartMenuMR">
                <div class="StartMenuBG" style="padding-bottom: 5px">
      """ ;
      for(child in item.getChildren()) {
        if(child instanceof UIExoStart.MenuItemContainer) renderMenuItemContainer(child) ;
        else renderMenuItemAction(child) ;
      }
      print """
                 </div>
               </div>
             </div>
             <div class="StartMenuBL">
               <div class="StartMenuBR">
               <div class="StartMenuBC"><span></span></div>
               </div>
             </div>
               
           </div>  
         </div>
      </div>
    """ ;
  }

  void renderMenuItemAction(UIExoStart.MenuItemAction item) {  	
    String name = item.getName() ;
    String label = _ctx.appRes(uicomponent.getId() + ".item."+name) ;
    String  href ;
    if(item.useAjax()) href = uicomponent.event(item.getAction(), name) ;
    else href = uicomponent.url(item.getAction(), name) ;
    print """
      <div class="MenuItem">
        <div class="LabelItem">
          <div class="$item.icon">
            <div class="LabelText"><a href="$href">$label</a></div>
          </div>
        </div>
      </div>
    """ ;
  }
  
  void renderMenuItemAction(String name, String icon, String action) {  	
    String  href = uicomponent.event(action, name) ;
    String label = _ctx.appRes(uicomponent.getId() + ".item."+name) ;
    print """
      <div class="MenuItem">
        <div class="LabelItem">
          <div class="$icon">
            <div class="LabelText"><a href="$href">$label</a></div>
          </div>
        </div>
      </div>
    """ ;
  }
  
  void renderLoginAction(String name, String icon, String action) {
    String  href = uicomponent.url(action, name) ;
    print """
      <div class="LoginContainer">
        <div class="LabelItem">
          <div class="$icon">
            <div class="LabelText"><a href="$href">$name</a></div>
          </div>
        </div>
      </div>
    """ ;
  }
%>
<div class="UIExoStart" id="UIExoStart">
  <div class="StartBarContainer">
    <div class="ExoStartButton ButtonNormal" onclick="$onclick" title="Click here to begin"><span></span></div>
    <div class="VLineSeparator"><span></span></div>
    <div class="DigitalClockContainer">
      <div class="DigitalClock" id="DigitalClock"><span></span></div>
    </div>
    <div class="VLineSeparator"><span></span></div>
    <div style="clear: both"><span></span></div>
  </div>
  
  <div id="StartMenuContainer" class="StartMenuContainer">
    <div class="StartMenuDecorator">
      <div class="TopDecorator"><span></span></div>
      <div class="StartMenuML">
        <div class="StartMenuMR">
          <div class="StartMenuBG">      
            <div class="MenuItemContainer" style="visibility: visible;">
              <%
                for(menu in uicomponent.getMenus())  {
                  for(item in menu)  {
                   if(item instanceof UIExoStart.MenuItemContainer) renderMenuItemContainer(item) ;
                   else renderMenuItemAction(item) ;
                  }
                  print """ 
                    <div class="HLineSeparator"><span></span></div>
                  """ ; 
                }
                renderNavigations() ;
                 print """ 
                  """ ; 
                if(uicomponent.isLogged()) {
                  renderLoginAction("Logout", "LogoutIcon", "Logout") ;
                } else {
                  renderLoginAction("Login", "LoginIcon", "Login") ;
                }
              %>
            </div>
            <div style="clear: left"><span></span></div>
          </div>
        </div>
      </div>      
      <div class="StartMenuBL">
        <div class="StartMenuBR">
        <div class="StartMenuBC"><span></span></div>
        </div>
      </div>      
    </div>    
  </div>
</div>
