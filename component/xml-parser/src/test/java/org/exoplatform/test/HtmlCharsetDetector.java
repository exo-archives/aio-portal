/*
 * Copyright (C) 2003-2007 eXo Platform SAS.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, see<http://www.gnu.org/licenses/>.
 */
/* -*- Mode: C; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 2 -*-
 *
 * The contents of this file are subject to the Netscape Public
 * License Version 1.1 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/NPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is mozilla.org code.
 *
 * The Initial Developer of the Original Code is Netscape
 * Communications Corporation.  Portions created by Netscape are
 * Copyright (C) 1998 Netscape Communications Corporation. All
 * Rights Reserved.
 *
 * Contributor(s):
 */
/*
 * DO NOT EDIT THIS DOCUMENT MANUALLY !!!
 * THIS FILE IS AUTOMATICALLY GENERATED BY THE TOOLS UNDER
 *    AutoDetect/tools/
 */
package org.exoplatform.test;
import java.io.BufferedInputStream;
import java.net.URL;

import org.exoplatform.services.chars.chardet.Detector;
import org.exoplatform.services.chars.chardet.ICharsetDetectionObserver;
import org.exoplatform.services.chars.chardet.PSMDetector;
/**
 * Created by The eXo Platform SARL
 * Author : Lai Van Khoi
 *          laivankhoi46pm1@yahoo.com
 * Nov 27, 2006  
 */
public class HtmlCharsetDetector extends BasicTestCase {
  
  public static boolean found = false;
  
  
  public void testClass() throws Exception {
    String[] argv = new String[]{"http://www.laodong.com.vn/Home/khoilv/2006/9/4343.laodong","6"};
    
    //if(argv.length!=1 && argv.length!=2){
    if(argv.length!=2){
      System.out.println("Usage: HtmlCharacterDetector <url> [<languageHint>]");
     
      System.out.println("");
      System.out.println("Where <url> is http://...");
      System.out.println("For optional <languageHint>. Use the following...");
      System.out.println("    1 => Japanese");
      System.out.println("    2 => Chinese");
      System.out.println("    3 => Simplified Chinese");
      System.out.println("    4 => Traditional Chinese");
      System.out.println("    5 => Korean");
      System.out.println("    6 => Don't know (default)");
      
      return;
    }
    
    //Initialize the nsDetector();
    int lang=(argv.length==2)? Integer.parseInt(argv[1]): PSMDetector.ALL;
    Detector det = new Detector(lang);
    
    //Set an observer...
    //The Notify() will be called when a matching charset is found.
    
    det.init(new ICharsetDetectionObserver(){
      public void notify(String charset){
        HtmlCharsetDetector.found =true;
        System.out.println("CHARSET = " + charset);
      }
    });
    
    URL url=new URL(argv[0]);
    BufferedInputStream imp = new BufferedInputStream(url.openStream());
    
    byte[] buf = new byte[1024];
    int len;
    boolean done = false;
    boolean isAscii = true;
    
    while((len=imp.read(buf, 0, buf.length))!=-1){    
      //Check if the stream is only ascii.
      if(isAscii)
        isAscii = det.isAscii(buf,len);
      
      //DoIt if non-ascii and not done yet.
      if(!isAscii && !done)
        done = det.doIt(buf, len, false);
    }
    det.dataEnd();
    
    if(isAscii){
      System.out.println("CHARSET = ARSII");
      found = true;
    }
    
    if(!found){
      String prob[] = det.getProbableCharsets();
      for(int i=0;i<prob.length;i++){
        System.out.println("Probable Charset = " + prob[i]);
      }
    }
  }
}
