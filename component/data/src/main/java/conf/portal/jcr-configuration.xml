<?xml version="1.0" encoding="ISO-8859-1"?>
<configuration>
  <component>
   <key>org.exoplatform.services.portletcontainer.persistence.PortletPreferencesPersister</key>
   <type>org.exoplatform.portal.portlet.JCRPortletPreferencesPersister</type>
  </component>  

  <component>
    <key>org.exoplatform.portal.config.PortalDAO</key>
    <type>org.exoplatform.portal.config.JCRPortalDAO</type> 
  </component>  
  
  <component>
    <key>org.exoplatform.portal.config.SharedConfigDAO</key>
    <type>org.exoplatform.portal.config.JCRSharedConfigDAO</type> 
  </component> 
  
  <component>
    <key>org.exoplatform.portal.config.UserACL</key>
    <type>org.exoplatform.portal.config.UserACL</type> 
  </component>  
  
  <component>
    <key>org.exoplatform.portal.content.ContentDAO</key>
    <type>org.exoplatform.portal.content.JCRContentDAO</type>     
  </component>

	<component>
    <key>org.exoplatform.portal.config.UserPortalConfigService</key>
    <type>org.exoplatform.portal.config.UserPortalConfigService</type>     
    <init-params>	
      <value-param>
        <name>default.user.template</name>
        <description>If user configs are null, user configs will load configs from this default user</description>
        <value>exo</value>
      </value-param>
			<value-param>
	    	<name>templateLocation</name>
	    	<value>war:/conf/users</value>
	    </value-param>
      
      <object-param>
        <name>admin.navigation.configuration</name>
        <description>configuration for the portal admin</description>
        <object type="org.exoplatform.portal.config.SharedNavigation">
          <field  name="groupId"><string>/portal/admin</string></field>
          <field  name="membership"><string>member</string></field>
          <field  name="navigation"><string>exoadmin</string></field>
          <field  name="description"><string>portal navigation</string></field>
        </object>             
      </object-param>
      
      <object-param>
        <name>community.navigation.configuration</name>
        <description>configuration for the portal communities</description>
        <object type="org.exoplatform.portal.config.SharedNavigation">
          <field  name="groupId"><string>/portal/community</string></field>
          <field  name="membership"><string>member</string></field>
          <field  name="navigation"><string>community</string></field>
          <field  name="description"><string>community navigation</string></field>
        </object>
      </object-param>
      
      <object-param>
        <name>company.navigation.configuration</name>
        <description>configuration for the portal company</description>
        <object type="org.exoplatform.portal.config.SharedNavigation">
          <field  name="groupId"><string>/portal/company</string></field>
          <field  name="membership"><string>member</string></field>
          <field  name="navigation"><string>company</string></field>
          <field  name="description"><string>company navigation</string></field>
        </object>        
      </object-param>
      
	  </init-params>    
  </component>   

	<component>
   <key>org.exoplatform.services.portletcontainer.bundle.ResourceBundleDelegate</key>
   <type>org.exoplatform.portal.portlet.ResourceBundleDelegateImpl</type>
  </component>
  
  <external-component-plugins>
    <target-component>org.exoplatform.services.jcr.RepositoryService</target-component>
    <component-plugin> 
	    <name>add.nodeType</name>
	    <set-method>addPlugin</set-method>
	    <type>org.exoplatform.services.jcr.impl.AddNodeTypePlugin</type>
	    <init-params>
	      <values-param>
	        <name>nodeTypesFiles</name>           
	        <value>jar:/conf/portal/model-nodetypes.xml</value> 
	      </values-param>
	    </init-params>
    </component-plugin>
  </external-component-plugins>  
  
  <external-component-plugins>  
    <target-component>org.exoplatform.portal.config.UserPortalConfigService</target-component>      
    <component-plugin>
      <name>portal.new.user.listener</name>
      <set-method>initListener</set-method>
      <type>org.exoplatform.portal.config.UserPortalConfigTemplateListener</type>
      <description>this listener create the portal configuration for the new user</description>
      <init-params>
        <value-param>
          <name>check.user</name>
          <description>The check user for checking db is empty or not</description>
          <value>exo</value>
        </value-param>
        <object-param>
          <name>configuration</name>
          <description>description</description>
          <object type="org.exoplatform.portal.config.NewPortalConfig">
            <field  name="predefinedUser">
              <collection type="java.util.HashSet">                
                <value><string>exo</string></value>
                <value><string>exoadmin</string></value>
                <value><string>company</string></value> 
                <value><string>community</string></value>                               
              </collection>
            </field>
            <field  name="templateUser"><string>template</string></field>
            <field  name="templateLocation"><string>war:/conf/users</string></field> 
          </object>
        </object-param>
      </init-params>
    </component-plugin>
  </external-component-plugins>  

  <external-component-plugins>  
    <target-component>org.exoplatform.portal.content.ContentDAO</target-component>      
    
    <component-plugin>
      <name>rssreader.listener</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.portal.content.RSSContentPlugin</type>
      <description>rss reader plugin</description>     
    </component-plugin>
    
    <component-plugin>
      <name>description.listener</name>
      <set-method>addPlugin</set-method>
      <type>org.exoplatform.portal.content.DescriptionPlugin</type>
      <description>Description plugin</description>     
    </component-plugin>
 </external-component-plugins>    
 
</configuration>

