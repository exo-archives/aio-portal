/*************************************************************************** * Copyright 2001-2003 The eXo Platform SARL         All rights reserved.  * * Please look at license.txt in info directory for more license detail.   * **************************************************************************/package org.exoplatform.portal.portlet;import org.apache.commons.logging.Log;import org.exoplatform.portal.config.Data;import org.exoplatform.portal.config.BaseDataService;import org.exoplatform.services.database.HibernateService;import org.exoplatform.services.log.LogService;import org.exoplatform.services.portletcontainer.pci.ExoWindowID;import org.exoplatform.services.portletcontainer.pci.WindowID;import org.exoplatform.services.portletcontainer.pci.model.ExoPortletPreferences;import org.exoplatform.services.portletcontainer.persistence.PortletPreferencesPersister;import org.hibernate.Session;/** * Jul 16, 2004  * @author: Tuan Nguyen * @email:   tuan08@users.sourceforge.net * @version: $Id: PortletPreferencesPersisterImpl.java,v 1.4 2004/08/11 02:22:16 tuan08 Exp $ */public class HibernatePortletPreferencesPersister extends BaseDataService implements  PortletPreferencesPersister {    @SuppressWarnings("unused")  private transient Log log_;    private HibernateService hservice_ ;  	public HibernatePortletPreferencesPersister(HibernateService hservice, LogService lservice) {    log_ = lservice.getLog(getClass());     hservice_ = hservice;  }	public ExoPortletPreferences getPortletPreferences(WindowID windowID) throws Exception {    Session session = hservice_.openSession() ;    ExoWindowID exoWindowID = (ExoWindowID) windowID ;        Data data = (Data)session.get(Data.class, exoWindowID.getPersistenceId());       if(data == null) return null;    PortletPreferences portletPerferences = (PortletPreferences) fromXML(data.getData(), PortletPreferences.class);    return  portletPerferences.toExoPortletPreferences() ;	}  @SuppressWarnings("unused")	public void savePortletPreferences(WindowID windowID, ExoPortletPreferences exoPref) throws Exception {  	}    }